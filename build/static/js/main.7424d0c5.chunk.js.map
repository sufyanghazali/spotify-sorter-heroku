{"version":3,"sources":["utils/sort.js","components/Song.js","components/SortButton.js","components/SaveButton.js","components/Playlist.js","hooks/useViewport.js","components/MobilePlaylistItem.js","components/DesktopPlaylistItem.js","components/PlaylistItem.js","components/Playlists.js","components/Dashboard.js","components/Login.js","components/App.js","index.js"],"names":["partition","arr","leftIdx","rightIdx","pivotIdx","pivotVal","currIdx","newPivotIdx","i","compareTracks","quickSortRecursive","Math","floor","a","b","Date","parse","track","album","release_date","module","exports","quickSort","length","compare","dateA","dateB","result","Song","song","console","log","className","src","images","url","alt","name","artists","SortButton","onClick","SaveButton","sorted","disabled","Playlist","playlist","access_token","onExit","useState","setSorted","songs","setSongs","useEffect","axios","get","tracks","href","headers","Authorization","response","data","items","total","params","offset","limit","then","res","concat","getPlaylistSongs","listItems","map","index","id","onSave","uris","uri","put","slice","counter","post","catch","error","status","request","message","config","role","focusable","height","width","viewBox","points","fill","stroke","owner","display_name","sortedSongs","sort","reverse","useViewport","window","innerWidth","setWidth","handleWindowResize","addEventListener","removeEventListener","MobilePlaylistItem","onPlaylistSelect","selectedPlaylist","DesktopPlaylistItem","PlaylistItem","Playlists","playlists","list","Dashboard","setPlaylists","setSelectedPlaylist","getUserPlaylists","Login","URLSearchParams","location","search","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7424d0c5.chunk.js","sourcesContent":["const partition = function(arr, leftIdx, rightIdx, pivotIdx) {\r\n    let pivotVal, currIdx, newPivotIdx;\r\n\r\n    pivotVal = arr[pivotIdx];\r\n    arr[pivotIdx] = arr[rightIdx];\r\n    arr[rightIdx] = pivotVal;\r\n\r\n    currIdx = leftIdx;\r\n\r\n    for (let i = leftIdx; i < rightIdx; i++) {\r\n        if (compareTracks(arr[i], pivotVal)) {\r\n\r\n            // swaps elements\r\n            [arr[i], arr[currIdx]] = [arr[currIdx], arr[i]];\r\n            currIdx++;\r\n        }\r\n    }\r\n\r\n    newPivotIdx = currIdx;\r\n    arr[rightIdx] = arr[newPivotIdx];\r\n    arr[newPivotIdx] = pivotVal;\r\n    // alternate way of swapping by destructuring\r\n    // [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]]\r\n\r\n    return newPivotIdx;\r\n}\r\n\r\nconst quickSortRecursive = (arr, leftIdx, rightIdx,) => {\r\n    if (rightIdx > leftIdx) {\r\n        let pivotIdx, newPivotIdx;\r\n        pivotIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n        newPivotIdx = partition(arr, leftIdx, rightIdx, pivotIdx);\r\n\r\n        quickSortRecursive(arr, leftIdx, newPivotIdx - 1);\r\n        quickSortRecursive(arr, newPivotIdx + 1, rightIdx);\r\n    }\r\n}\r\n\r\nconst quickSort = arr => {\r\n    quickSortRecursive(arr, 0, arr.length - 1);\r\n}\r\n\r\nconst compareTracks = (a, b) => {\r\n    let dateA, dateB;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n    return dateA < dateB;\r\n}\r\n\r\nconst compare = (a, b) => {\r\n    let dateA, dateB;\r\n    let result = 0;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n\r\n    if (dateA < dateB)\r\n        result = -1;\r\n    else if (dateB > dateA)\r\n        result = 1\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    partition,\r\n    quickSort,\r\n    quickSortRecursive,\r\n    compareTracks,\r\n    compare\r\n}","import React from 'react';\r\n\r\n\r\n\r\nfunction Song({ song }) {\r\n    console.log(song);\r\n    return (\r\n        <div className=\"song\">\r\n            <img className=\"song-image\" src={song.track.album.images[2].url} alt=\"song\" />\r\n            <div className=\"song-info\">\r\n                <div className=\"song-title\">{song.track.name}</div>\r\n                <div className=\"song-artist\">{song.track.artists[0].name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nfunction SortButton({ onClick }) {\r\n    return (\r\n        <button onClick={() => onClick()}>\r\n            Sort\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SortButton;","import React from 'react';\r\n\r\nfunction SaveButton({ onClick, sorted }) {\r\n    return (\r\n        // <button className=\"ui button\" onClick={() => onClick()} disabled={sorted}>Save</button>\r\n        <button onClick={() => onClick()} disabled={!sorted}>\r\n            Save\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SaveButton;","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Song from './Song';\r\nimport SortButton from './SortButton';\r\nimport SaveButton from './SaveButton';\r\n\r\nimport { compare } from '../utils/sort';\r\n\r\n\r\nfunction Playlist({ playlist, access_token, onExit }) {\r\n    const [sorted, setSorted] = useState(false);\r\n    const [songs, setSongs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getPlaylistSongs() {\r\n            const response = await axios.get(playlist.tracks.href, {\r\n                headers: {\r\n                    Authorization: `Bearer ${ access_token }`\r\n                }\r\n            });\r\n\r\n            let songs = response.data.items;\r\n\r\n            while (songs.length < response.data.total) {\r\n                const res = await axios.get(playlist.tracks.href, {\r\n                    params: {\r\n                        offset: songs.length,\r\n                        limit: 100\r\n                    },\r\n                    headers: {\r\n                        Authorization: `Bearer ${ access_token }`\r\n                    }\r\n                }).then(res => res.data.items)\r\n\r\n                // console.log([...songs, ...res]);\r\n                songs = songs.concat(res);\r\n            }\r\n            setSongs(songs);\r\n        }\r\n        setSorted(false);\r\n        getPlaylistSongs();\r\n    }, [playlist, access_token]);\r\n\r\n\r\n    const listItems = songs.map((song, index) => (\r\n        <Song song={song} key={song.track.id} />\r\n    ));\r\n\r\n    const onSort = () => {\r\n        console.log(sorted);\r\n        const sortedSongs = songs.sort(compare).reverse();\r\n        setSongs(sortedSongs);\r\n        !sorted && setSorted(!sorted);\r\n    }\r\n\r\n    const onSave = async () => {\r\n        // TODO: for playlists.length > 100, first request should be PUT, then subsequent requests should POST\r\n\r\n        if (sorted) {\r\n            const uris = songs.map(song => song.track.uri);\r\n\r\n            await axios.put(`https://api.spotify.com/v1/playlists/${ playlist.id }/tracks`, {\r\n                uris: uris.slice(0, 100)\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${ access_token }`\r\n                }\r\n            })\r\n                .then(async () => {\r\n                    if (uris.length > 100) {\r\n                        let counter = 100;\r\n                        while (counter < uris.length) {\r\n                            await axios.post(`https://api.spotify.com/v1/playlists/${ playlist.id }/tracks`, {\r\n                                uris: uris.slice(counter, counter + 100)\r\n                            }, {\r\n                                headers: {\r\n                                    Authorization: `Bearer ${ access_token }`\r\n                                }\r\n                            });\r\n\r\n                            counter += 100;\r\n                        }\r\n                    }\r\n                })\r\n                .catch(function(error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.headers);\r\n                    } else if (error.request) {\r\n                        console.log(error.request);\r\n                    } else {\r\n                        console.log('Error', error.message);\r\n                    }\r\n                    console.log(error.config);\r\n                });\r\n\r\n            setSorted(!sorted);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"playlist\">\r\n            <button className=\"playlist--button-exit\" onClick={() => onExit()}>\r\n                <svg role=\"img\" focusable=\"false\" height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" className=\"button-back\">\r\n                    <polyline points=\"16 4 7 12 16 20\" fill=\"none\" stroke=\"#181818\"></polyline>\r\n                </svg>\r\n            </button>\r\n            <div className=\"playlist-header\">\r\n                <div className=\"playlist-image\">\r\n                    {/* spotify web player uses 300x300 image and resizes */}\r\n                    <img src={playlist.images[0].url} alt={playlist.name} />\r\n                </div>\r\n                <div className=\"metadata\">\r\n                    <h1 className=\"playlist-name\">{playlist.name}</h1>\r\n                    <span>{playlist.owner.display_name}</span>\r\n                    <div className=\"buttons\">\r\n                        <SortButton onClick={onSort} />\r\n                        <SaveButton onClick={onSave} sorted={sorted} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>{listItems}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Playlist;","import React, { useEffect, useState } from 'react';\r\n\r\nconst useViewport = () => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        const handleWindowResize = () => setWidth(window.innerWidth);\r\n\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n        return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, []);\r\n\r\n    return { width };\r\n}\r\n\r\nexport default useViewport;","import React from \"react\";\r\n\r\nconst MobilePlaylistItem = ({ playlist, onPlaylistSelect, selectedPlaylist }) => {\r\n    return (\r\n        <div\r\n            className={`playlist-item ${ selectedPlaylist && selectedPlaylist.name === playlist.name ? \"active\" : \"\" }`}\r\n            onClick={() => onPlaylistSelect(playlist)}\r\n        >\r\n            <div className=\"list-image\">\r\n                <img src={playlist.images[2].url} alt={playlist.name} />\r\n            </div>\r\n            <div className=\"list-info\">{playlist.name}</div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MobilePlaylistItem;","import React from 'react';\r\n\r\nfunction DesktopPlaylistItem({ playlist, onPlaylistSelect, selectedPlaylist }) {\r\n    return (\r\n        // <div className=\"playlist-item item\" onClick={() => onPlaylistSelect(playlist)}>\r\n        //     {playlist.name}\r\n        // </div>\r\n        <div\r\n            className={`playlist-item ${ selectedPlaylist && selectedPlaylist.name === playlist.name ? \"active\" : \"\" }`}\r\n            onClick={() => onPlaylistSelect(playlist)}\r\n        >\r\n            {playlist.name}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DesktopPlaylistItem;","import React from 'react';\r\nimport useViewport from '../hooks/useViewport';\r\nimport MobilePlaylistItem from './MobilePlaylistItem';\r\nimport DesktopPlaylistItem from './DesktopPlaylistItem';\r\n\r\nconst PlaylistItem = ({ playlist, onPlaylistSelect, selectedPlaylist }) => {\r\n    const { width } = useViewport();\r\n    const breakpoint = 768;\r\n\r\n\r\n\r\n    // TODO: need to pass in a component with playlist, onPlaylistSelect, and selected playlist\r\n    return (\r\n        width < breakpoint ?\r\n            <MobilePlaylistItem\r\n                playlist={playlist}\r\n                onPlaylistSelect={onPlaylistSelect}\r\n                selectedPlaylist={selectedPlaylist}\r\n            />\r\n            :\r\n            <DesktopPlaylistItem\r\n                playlist={playlist}\r\n                onPlaylistSelect={onPlaylistSelect}\r\n                selectedPlaylist={selectedPlaylist}\r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default PlaylistItem;","import React from 'react';\r\nimport PlaylistItem from './PlaylistItem';\r\n\r\nfunction Playlists({ playlists, onPlaylistSelect, selectedPlaylist }) {\r\n    const list = playlists.map(playlist => {\r\n        return (\r\n            <PlaylistItem\r\n                playlist={playlist}\r\n                onPlaylistSelect={onPlaylistSelect}\r\n                selectedPlaylist={selectedPlaylist}\r\n                key={playlist.id}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        // <div className=\"ui relaxed divided list\">{list}</div>\r\n        <div className={`playlists ${ selectedPlaylist ? \"disable-scroll\" : \"\" }`}>{list}</div>\r\n    );\r\n}\r\n\r\nexport default Playlists;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport '../index.css';\r\n\r\nimport Playlist from './Playlist';\r\nimport Playlists from './Playlists';\r\n\r\nconst Dashboard = ({ access_token }) => {\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n    // TODO: have playlist slide in only after loaded\r\n    // const [playlistLoaded, setPlaylistLoaded] = useState(false); \r\n\r\n    useEffect(() => {\r\n        async function getUserPlaylists() {\r\n            const response = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${ access_token }`\r\n                }\r\n            }).then(res => res.data.items);\r\n            setPlaylists(response);\r\n        }\r\n\r\n        getUserPlaylists();\r\n    }, [access_token]);\r\n\r\n    const onPlaylistSelect = playlist => {\r\n        setSelectedPlaylist(playlist);\r\n    }\r\n\r\n    // In mobile layout, when exit/back sets selected playlist to null\r\n    const onExit = () => {\r\n        setSelectedPlaylist(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Playlists playlists={playlists} onPlaylistSelect={onPlaylistSelect} selectedPlaylist={selectedPlaylist} />\r\n\r\n            {/* apply animation styling to this div */}\r\n            <div className={`playlist-container ${ selectedPlaylist ? \"playlist-slidein\" : \"\" }`}>\r\n                {selectedPlaylist ?\r\n                    <Playlist\r\n                        playlist={selectedPlaylist}\r\n                        access_token={access_token}\r\n                        onExit={onExit} />\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1 className=\"login-header\">Sortify</h1>\r\n            <a className=\"spotify spotify-btn spotify-btn-login\" href=\"https://spotify-sorting-app.herokuapp.com/login\">\r\n                Login with Spotify\r\n            </a>\r\n            {/* <a className=\"spotify spotify-btn spotify-btn-login\" href=\"http://localhost:3001/login\">\r\n                Login with Spotify\r\n            </a> */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\n\r\nconst access_token = new URLSearchParams(window.location.search).get(\"access_token\");\r\n\r\nfunction App() {\r\n  return access_token ? <Dashboard access_token={access_token} /> : <Login />\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}