{"version":3,"sources":["utils/sort.js","components/Song.js","components/Playlist.js","components/PlaylistItem.js","components/Playlists.js","components/SortButton.js","components/SaveButton.js","components/Dashboard.js","components/Login.js","components/App.js","index.js"],"names":["partition","arr","leftIdx","rightIdx","pivotIdx","pivotVal","currIdx","newPivotIdx","i","compareTracks","quickSortRecursive","Math","floor","a","b","Date","parse","track","album","release_date","module","exports","quickSort","length","compare","dateA","dateB","result","Song","song","ListGroup","Item","className","Container","Row","name","artists","Playlist","listItems","songs","map","id","PlaylistItem","playlist","onPlaylistSelect","selectedPlaylist","onClick","Playlists","playlists","list","SortButton","Button","variant","SaveButton","sorted","disabled","Dashboard","props","axios","get","tracks","href","headers","Authorization","access_token","response","data","items","total","params","offset","limit","then","res","concat","console","log","setState","onSortButtonClicked","currentSongs","state","sort","reverse","onSaveButtonClicked","uris","uri","put","slice","counter","post","catch","error","status","request","message","config","this","Col","md","React","Component","Login","URLSearchParams","window","location","search","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b03156cb.chunk.js","sourcesContent":["const partition = function(arr, leftIdx, rightIdx, pivotIdx) {\r\n    let pivotVal, currIdx, newPivotIdx;\r\n\r\n    pivotVal = arr[pivotIdx];\r\n    arr[pivotIdx] = arr[rightIdx];\r\n    arr[rightIdx] = pivotVal;\r\n\r\n    currIdx = leftIdx;\r\n\r\n    for (let i = leftIdx; i < rightIdx; i++) {\r\n        if (compareTracks(arr[i], pivotVal)) {\r\n\r\n            // swaps elements\r\n            [arr[i], arr[currIdx]] = [arr[currIdx], arr[i]];\r\n            currIdx++;\r\n        }\r\n    }\r\n\r\n    newPivotIdx = currIdx;\r\n    arr[rightIdx] = arr[newPivotIdx];\r\n    arr[newPivotIdx] = pivotVal;\r\n    // alternate way of swapping by destructuring\r\n    // [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]]\r\n\r\n    return newPivotIdx;\r\n}\r\n\r\nconst quickSortRecursive = (arr, leftIdx, rightIdx,) => {\r\n    if (rightIdx > leftIdx) {\r\n        let pivotIdx, newPivotIdx;\r\n        pivotIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n        newPivotIdx = partition(arr, leftIdx, rightIdx, pivotIdx);\r\n\r\n        quickSortRecursive(arr, leftIdx, newPivotIdx - 1);\r\n        quickSortRecursive(arr, newPivotIdx + 1, rightIdx);\r\n    }\r\n}\r\n\r\nconst quickSort = arr => {\r\n    quickSortRecursive(arr, 0, arr.length - 1);\r\n}\r\n\r\nconst compareTracks = (a, b) => {\r\n    let dateA, dateB;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n    return dateA < dateB;\r\n}\r\n\r\nconst compare = (a, b) => {\r\n    let dateA, dateB;\r\n    let result = 0;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n\r\n    if (dateA < dateB)\r\n        result = -1;\r\n    else if (dateB > dateA)\r\n        result = 1\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    partition,\r\n    quickSort,\r\n    quickSortRecursive,\r\n    compareTracks,\r\n    compare\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\nfunction Song({ song }) {\r\n    return (\r\n        <ListGroup.Item className=\"song\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"song-title\">{song.track.name}</div>\r\n                    <div className=\"song-artist\">{song.track.artists[0].name}</div>\r\n                </Row>\r\n            </Container>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Song from './Song';\r\n\r\nfunction Playlist({ songs }) {\r\n    const listItems = songs.map(song => (\r\n        <Song song={song} key={song.track.id} />\r\n    ))\r\n\r\n    return (\r\n        <ListGroup>{listItems}</ListGroup>\r\n    )\r\n\r\n}\r\n\r\nexport default Playlist;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction PlaylistItem({ playlist, onPlaylistSelect, selectedPlaylist }) {\r\n    return (\r\n        // <div className=\"playlist-item item\" onClick={() => onPlaylistSelect(playlist)}>\r\n        //     {playlist.name}\r\n        // </div>\r\n        <ListGroup.Item\r\n            className={`playlist-item item ${ selectedPlaylist && selectedPlaylist.name === playlist.name ? \"active\" : \"\" }`}\r\n            onClick={() => onPlaylistSelect(playlist)}\r\n        >\r\n            {playlist.name}\r\n        </ListGroup.Item>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaylistItem;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport PlaylistItem from './PlaylistItem';\r\n\r\nfunction Playlists({ playlists, onPlaylistSelect, selectedPlaylist }) {\r\n    const list = playlists.map(playlist => {\r\n        return (\r\n            <PlaylistItem\r\n                playlist={playlist}\r\n                onPlaylistSelect={onPlaylistSelect}\r\n                selectedPlaylist={selectedPlaylist}\r\n                key={playlist.id}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        // <div className=\"ui relaxed divided list\">{list}</div>\r\n        <ListGroup id=\"playlists\">{list}</ListGroup>\r\n    );\r\n}\r\n\r\nexport default Playlists;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SortButton({ onClick }) {\r\n    return (\r\n        <Button variant=\"primary\" onClick={() => onClick()}>\r\n            Sort\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SortButton;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SaveButton({ onClick, sorted }) {\r\n    return (\r\n        // <button className=\"ui button\" onClick={() => onClick()} disabled={sorted}>Save</button>\r\n        <Button variant=\"light\" onClick={() => onClick()} disabled={sorted}>\r\n            Save\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SaveButton;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../index.css';\r\nimport { compare } from '../utils/sort';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Playlist from './Playlist';\r\nimport Playlists from './Playlists';\r\nimport SortButton from './SortButton';\r\nimport SaveButton from './SaveButton';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playlists: [],\r\n            selectedPlaylist: null,\r\n            songs: [],\r\n            sorted: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\r\n            headers: {\r\n                Authorization: `Bearer ${ this.props.access_token }`\r\n            }\r\n        }).then(res => res.data.items);\r\n\r\n        this.setState({\r\n            playlists: response\r\n        })\r\n    }\r\n\r\n    onPlaylistSelect = async playlist => {\r\n        const response = await axios.get(playlist.tracks.href, {\r\n            headers: {\r\n                Authorization: `Bearer ${ this.props.access_token }`\r\n            }\r\n        });\r\n\r\n        let songs = response.data.items;\r\n\r\n        while (songs.length < response.data.total) {\r\n            const res = await axios.get(playlist.tracks.href, {\r\n                params: {\r\n                    offset: songs.length,\r\n                    limit: 100\r\n                },\r\n                headers: {\r\n                    Authorization: `Bearer ${ this.props.access_token }`\r\n                }\r\n            }).then(res => res.data.items)\r\n\r\n            songs = songs.concat(res);\r\n        }\r\n\r\n        console.log(songs);\r\n\r\n        this.setState({\r\n            selectedPlaylist: playlist,\r\n            songs: songs,\r\n            sorted: false\r\n        });\r\n    }\r\n\r\n    onSortButtonClicked = () => {\r\n        const currentSongs = this.state.songs.sort(compare).reverse();\r\n        this.setState({\r\n            songs: currentSongs,\r\n            sorted: true\r\n        });\r\n    }\r\n\r\n    onSaveButtonClicked = async () => {\r\n        // TODO: for playlists.length > 100, first request should be PUT, then subsequent requests should POST\r\n\r\n        if (this.state.sorted) {\r\n            const songs = this.state.songs;\r\n            const uris = songs.map(song => song.track.uri);\r\n\r\n            await axios.put(`https://api.spotify.com/v1/playlists/${ this.state.selectedPlaylist.id }/tracks`, {\r\n                uris: uris.slice(0, 100)\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${ this.props.access_token }`\r\n                }\r\n            })\r\n                .then(async () => {\r\n                    if (uris.length > 100) {\r\n                        let counter = 100;\r\n                        while (counter < uris.length) {\r\n                            await axios.post(`https://api.spotify.com/v1/playlists/${ this.state.selectedPlaylist.id }/tracks`, {\r\n                                uris: uris.slice(counter, counter + 100)\r\n                            }, {\r\n                                headers: {\r\n                                    Authorization: `Bearer ${ this.props.access_token }`\r\n                                }\r\n                            });\r\n\r\n                            counter += 100;\r\n                        }\r\n                    }\r\n                })\r\n                .catch(function(error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.headers);\r\n                    } else if (error.request) {\r\n                        console.log(error.request);\r\n                    } else {\r\n                        console.log('Error', error.message);\r\n                    }\r\n                    console.log(error.config);\r\n                });\r\n\r\n            this.setState({ sorted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"dashboard\">\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <Playlists playlists={this.state.playlists} onPlaylistSelect={this.onPlaylistSelect} selectedPlaylist={this.state.selectedPlaylist} />\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        {this.state.selectedPlaylist ? <h2 className=\"header-playlist\">{this.state.selectedPlaylist.name}</h2> : null}\r\n                        <Playlist className=\"playlist\" songs={this.state.songs} />\r\n                    </Col>\r\n                    {this.state.selectedPlaylist ?\r\n                        <Col md={2}>\r\n                            <div className=\"buttons\">\r\n                                <SortButton onClick={this.onSortButtonClicked} />\r\n                                <SaveButton onClick={this.onSaveButtonClicked} sorted={!this.state.sorted} />\r\n                            </div>\r\n                        </Col> : null\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1 className=\"login-header\">Sortify</h1>\r\n            <Button className=\"spotify spotify-btn spotify-btn-login\" href=\"https://spotify-sorting-app.herokuapp.com/login\">\r\n                Login with Spotify\r\n            </Button>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\n\r\nconst access_token = new URLSearchParams(window.location.search).get(\"access_token\");\r\n\r\nfunction App() {\r\n  return access_token ? <Dashboard access_token={access_token} /> : <Login />\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}