{"version":3,"sources":["utils/sort.js","components/Song.js","components/Playlist.js","components/PlaylistItem.js","components/Playlists.js","components/SortButton.js","components/SaveButton.js","components/Dashboard.js","components/Login.js","components/App.js","index.js"],"names":["partition","arr","leftIdx","rightIdx","pivotIdx","pivotVal","currIdx","newPivotIdx","i","compareTracks","quickSortRecursive","Math","floor","a","b","Date","parse","track","album","release_date","module","exports","quickSort","length","compare","dateA","dateB","result","Song","song","className","name","artists","Playlist","listItems","songs","map","id","PlaylistItem","playlist","onPlaylistSelect","onClick","Playlists","playlists","list","SortButton","SaveButton","sorted","disabled","Dashboard","props","axios","get","tracks","href","headers","Authorization","access_token","response","data","items","total","params","offset","limit","then","res","concat","console","log","setState","selectedPlaylist","onSortButtonClicked","currentSongs","state","sort","reverse","onSaveButtonClicked","uris","uri","put","catch","error","status","request","message","config","this","React","Component","Login","URLSearchParams","window","location","search","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeae786b.chunk.js","sourcesContent":["const partition = function(arr, leftIdx, rightIdx, pivotIdx) {\r\n    let pivotVal, currIdx, newPivotIdx;\r\n\r\n    pivotVal = arr[pivotIdx];\r\n    arr[pivotIdx] = arr[rightIdx];\r\n    arr[rightIdx] = pivotVal;\r\n\r\n    currIdx = leftIdx;\r\n\r\n    for (let i = leftIdx; i < rightIdx; i++) {\r\n        if (compareTracks(arr[i], pivotVal)) {\r\n\r\n            // swaps elements\r\n            [arr[i], arr[currIdx]] = [arr[currIdx], arr[i]];\r\n            currIdx++;\r\n        }\r\n    }\r\n\r\n    newPivotIdx = currIdx;\r\n    arr[rightIdx] = arr[newPivotIdx];\r\n    arr[newPivotIdx] = pivotVal;\r\n    // alternate way of swapping by destructuring\r\n    // [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]]\r\n\r\n    return newPivotIdx;\r\n}\r\n\r\nconst quickSortRecursive = (arr, leftIdx, rightIdx,) => {\r\n    if (rightIdx > leftIdx) {\r\n        let pivotIdx, newPivotIdx;\r\n        pivotIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n        newPivotIdx = partition(arr, leftIdx, rightIdx, pivotIdx);\r\n\r\n        quickSortRecursive(arr, leftIdx, newPivotIdx - 1);\r\n        quickSortRecursive(arr, newPivotIdx + 1, rightIdx);\r\n    }\r\n}\r\n\r\nconst quickSort = arr => {\r\n    quickSortRecursive(arr, 0, arr.length - 1);\r\n}\r\n\r\nconst compareTracks = (a, b) => {\r\n    let dateA, dateB;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n    return dateA < dateB;\r\n}\r\n\r\nconst compare = (a, b) => {\r\n    let dateA, dateB;\r\n    let result = 0;\r\n    dateA = Date.parse(a.track.album.release_date);\r\n    dateB = Date.parse(b.track.album.release_date);\r\n\r\n\r\n    if (dateA < dateB)\r\n        result = -1;\r\n    else if (dateB > dateA)\r\n        result = 1\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    partition,\r\n    quickSort,\r\n    quickSortRecursive,\r\n    compareTracks,\r\n    compare\r\n}","import React from 'react';\r\n\r\nfunction Song({ song }) {\r\n    return (\r\n        <div className=\"ui item grid\">\r\n            <div className=\"content nine wide column\">\r\n                <div className=\"header\">{song.track.name}</div>\r\n            </div>\r\n            <div className=\"content five wide column\">\r\n                <div className=\"description\">{song.track.artists[0].name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\nimport Song from './Song';\r\n\r\nfunction Playlist({ songs }) {\r\n    const listItems = songs.map(song => (\r\n        <Song song={song} key={song.track.id} />\r\n    ))\r\n\r\n    return (\r\n        <ul>{listItems}</ul>\r\n    )\r\n\r\n}\r\n\r\nexport default Playlist;","import React from 'react';\r\n\r\nfunction PlaylistItem({ playlist, onPlaylistSelect }) {\r\n    return (\r\n        <div className=\"playlist-item item\" onClick={() => onPlaylistSelect(playlist)}>\r\n            {playlist.name}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaylistItem;","import React from 'react';\r\nimport PlaylistItem from './PlaylistItem';\r\n\r\nfunction Playlists({ playlists, onPlaylistSelect }) {\r\n    const list = playlists.map(playlist => {\r\n        return <PlaylistItem playlist={playlist} onPlaylistSelect={onPlaylistSelect} key={playlist.id} />\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"ui relaxed divided list\">{list}</div>\r\n    )\r\n\r\n}\r\n\r\nexport default Playlists;","import React from 'react';\r\n\r\nfunction SortButton({ onClick }) {\r\n    return (\r\n        <button className=\"ui button primary\" onClick={() => onClick()}>Sort</button>\r\n    )\r\n}\r\n\r\nexport default SortButton;","import React from 'react';\r\n\r\nfunction SaveButton({ onClick, sorted }) {\r\n    return (\r\n        <button className=\"ui button\" onClick={() => onClick()} disabled={sorted}>Save</button>\r\n    )\r\n}\r\n\r\nexport default SaveButton;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../index.css';\r\nimport { compare } from '../utils/sort';\r\n\r\nimport Playlist from './Playlist';\r\nimport Playlists from './Playlists';\r\nimport SortButton from './SortButton';\r\nimport SaveButton from './SaveButton';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playlists: [],\r\n            selectedPlaylist: null,\r\n            songs: [],\r\n            sorted: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\r\n            headers: {\r\n                Authorization: `Bearer ${ this.props.access_token }`\r\n            }\r\n        }).then(res => res.data.items);\r\n\r\n        this.setState({\r\n            playlists: response\r\n        })\r\n    }\r\n\r\n    onPlaylistSelect = async playlist => {\r\n        const response = await axios.get(playlist.tracks.href, {\r\n            headers: {\r\n                Authorization: `Bearer ${ this.props.access_token }`\r\n            }\r\n        });\r\n\r\n        let songs = response.data.items;\r\n\r\n        while (songs.length < response.data.total) {\r\n            const res = await axios.get(playlist.tracks.href, {\r\n                params: {\r\n                    offset: songs.length,\r\n                    limit: 100\r\n                },\r\n                headers: {\r\n                    Authorization: `Bearer ${ this.props.access_token }`\r\n                }\r\n            }).then(res => res.data.items)\r\n\r\n            songs = songs.concat(res);\r\n        }\r\n\r\n        console.log(songs);\r\n\r\n        this.setState({\r\n            selectedPlaylist: playlist,\r\n            songs: songs,\r\n            sorted: false\r\n        });\r\n    }\r\n\r\n    onSortButtonClicked = () => {\r\n        const currentSongs = this.state.songs.sort(compare).reverse();\r\n        this.setState({\r\n            songs: currentSongs,\r\n            sorted: true\r\n        });\r\n    }\r\n\r\n    onSaveButtonClicked = () => {\r\n        if (this.state.sorted) {\r\n            const songs = this.state.songs;\r\n            const uris = songs.map(song => song.track.uri);\r\n            axios.put(`https://api.spotify.com/v1/playlists/${ this.state.selectedPlaylist.id }/tracks`, {\r\n                uris: uris\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${ this.props.access_token }`\r\n                },\r\n            }).catch(function(error) {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                } else if (error.request) {\r\n                    console.log(error.request);\r\n                } else {\r\n                    console.log('Error', error.message);\r\n                }\r\n                console.log(error.config);\r\n            });\r\n\r\n            this.setState({ sorted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container dashboard\">\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"three wide column\">\r\n                            <Playlists playlists={this.state.playlists} onPlaylistSelect={this.onPlaylistSelect} />\r\n                        </div>\r\n                        <div className=\"ten wide column\">\r\n                            <Playlist songs={this.state.songs} />\r\n                        </div>\r\n                        <div className=\"three wide column\">\r\n                            <SortButton onClick={this.onSortButtonClicked} />\r\n                            <SaveButton onClick={this.onSaveButtonClicked} sorted={!this.state.sorted} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            <a className=\"btn btn-success btn-lg\" href=\"https://spotify-sorting-app.herokuapp.com/login\">\r\n                Login with Spotify\r\n            </a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\n\r\nconst access_token = new URLSearchParams(window.location.search).get(\"access_token\");\r\n\r\nfunction App() {\r\n  return access_token ? <Dashboard access_token={access_token} /> : <Login />\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}